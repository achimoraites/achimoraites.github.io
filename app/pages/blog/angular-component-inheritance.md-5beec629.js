import{S as n,i as e,s as a,A as t,j as s,m as o,o as p,p as c,v as i,r,w as h,q as u,e as l,t as m,k as d,c as f,a as y,g,d as k,n as w,b as v,f as E,D as b,E as T}from"../../chunks/vendor-12ce1488.js";import{B as I}from"../../chunks/blog-post-layout-e881a5a0.js";import"../../chunks/OpenGraph-f36c6cfd.js";import"../../chunks/ArticleCard-73ec8643.js";function P(n){let e,a,t,s,o,p,c,i,r,h,u,I,P,x,C,B,H,A,$,O,L,j,U,N,R,S,G,M,W,Y,z,D,q,F,J,K,Q,V,X,Z,_,nn,en,an,tn,sn,on,pn,cn,rn,hn,un,ln,mn,dn,fn,yn,gn,kn,wn,vn,En,bn,Tn,In,Pn,xn,Cn,Bn,Hn,An,$n,On,Ln,jn,Un,Nn,Rn,Sn,Gn,Mn,Wn,Yn,zn,Dn,qn,Fn,Jn,Kn,Qn,Vn,Xn,Zn,_n,ne,ee,ae,te,se,oe,pe,ce,ie,re,he,ue,le,me,de,fe,ye,ge,ke,we,ve,Ee,be,Te,Ie,Pe,xe,Ce,Be,He,Ae,$e,Oe,Le,je,Ue,Ne;return{c(){e=l("h2"),a=m("About"),t=d(),s=l("p"),o=m("Component inheritance can be useful when you\nhave duplicated/shared code between your components."),p=d(),c=l("p"),i=m("Think about having a situation where you have 3 components\nthat share a "),r=l("code"),h=m("theme @Input()"),u=d(),I=l("p"),P=m("This could be the case where you want to have your components to adapt based on a provided theme."),x=d(),C=l("h2"),B=m("Why"),H=d(),A=l("p"),$=m("When you have 2-3 components with shared functionality\nyou might say “well why to bother with inheritance?“."),O=d(),L=l("p"),j=m("And in the most common cases that’s okay, you don’t need to."),U=d(),N=l("p"),R=m("But by using inheritance you do more than just to avoid to type the shared functionality between your components."),S=d(),G=l("p"),M=m("The benefit of inheritance is when we have shared functionality in many components!"),W=d(),Y=l("h2"),z=m("How"),D=d(),q=l("p"),F=m("Using component inheritance is simple, you need:"),J=d(),K=l("ul"),Q=l("li"),V=m("A Base component"),X=d(),Z=l("li"),_=m("The Component/s to extend the Base component"),nn=d(),en=l("h2"),an=m("A simple example"),tn=d(),sn=l("p"),on=m("Here we will use only one component to extend the Base component but the same process applies to no matter how many components we are going to use."),pn=d(),cn=l("h3"),rn=m("Base component"),hn=d(),un=l("pre"),ln=d(),mn=l("h3"),dn=m("ThemedInput component"),fn=d(),yn=l("p"),gn=m("By extending the Base component the ThemedInput has the theme input!"),kn=d(),wn=l("p"),vn=m("Anything added / updated in the Base component will be reflected here too!"),En=d(),bn=l("pre"),Tn=d(),In=l("h3"),Pn=m("Changing/Updating shared functionality"),xn=d(),Cn=l("p"),Bn=m("Having a base component with the shared functionality you can now "),Hn=l("strong"),An=m("change/update the shared functionality in one place"),$n=m(" instead of doing it in every component that exists or will be created in the future!"),On=d(),Ln=l("p"),jn=m("A good scenario would be when you decide to use a service that is common to all the components to share state."),Un=d(),Nn=l("p"),Rn=m("Imagine that one day you need to switch to NgRx:"),Sn=d(),Gn=l("ul"),Mn=l("li"),Wn=l("strong"),Yn=m("Case 1 - You are using inheritance"),zn=m(": all you need to do is to update the base component to start using it."),Dn=d(),qn=l("li"),Fn=l("strong"),Jn=m("Case 2 - You are NOT using inheritance"),Kn=m(": oh poor soul… you will need to go to all of the components and you will need to update the code for each one of them!"),Qn=d(),Vn=l("p"),Xn=m("I believe the first Case is faster, simpler and less error prone ;)"),Zn=d(),_n=l("p"),ne=l("strong"),ee=m("Adding new shared functionality becomes simple!"),ae=d(),te=l("h3"),se=m("Testing shared code"),oe=d(),pe=l("p"),ce=m("Testing the shared functionality is simpler, all we need to do is to test the base class."),ie=d(),re=l("p"),he=m("This way we avoid having to write tests that are actually testing the same shared code across components."),ue=d(),le=l("h2"),me=m("Summary"),de=d(),fe=l("p"),ye=m("Using the right tool for the job is important, here we explored using component inheritance to:"),ge=d(),ke=l("ul"),we=l("li"),ve=m("simplify the usage of shared component code"),Ee=d(),be=l("li"),Te=m("allow for easier future change / update"),Ie=d(),Pe=l("li"),xe=m("optimizing the testing of our shared code"),Ce=d(),Be=l("p"),He=l("strong"),Ae=m("Inheritance is powerful yet keep in mind that to use it only when it makes sense."),$e=d(),Oe=l("p"),Le=m("Most of the times composition does the trick!"),je=d(),Ue=l("p"),Ne=m("Happy coding!!!"),this.h()},l(n){e=f(n,"H2",{});var l=y(e);a=g(l,"About"),l.forEach(k),t=w(n),s=f(n,"P",{});var m=y(s);o=g(m,"Component inheritance can be useful when you\nhave duplicated/shared code between your components."),m.forEach(k),p=w(n),c=f(n,"P",{});var d=y(c);i=g(d,"Think about having a situation where you have 3 components\nthat share a "),r=f(d,"CODE",{});var v=y(r);h=g(v,"theme @Input()"),v.forEach(k),d.forEach(k),u=w(n),I=f(n,"P",{});var E=y(I);P=g(E,"This could be the case where you want to have your components to adapt based on a provided theme."),E.forEach(k),x=w(n),C=f(n,"H2",{});var b=y(C);B=g(b,"Why"),b.forEach(k),H=w(n),A=f(n,"P",{});var T=y(A);$=g(T,"When you have 2-3 components with shared functionality\nyou might say “well why to bother with inheritance?“."),T.forEach(k),O=w(n),L=f(n,"P",{});var Re=y(L);j=g(Re,"And in the most common cases that’s okay, you don’t need to."),Re.forEach(k),U=w(n),N=f(n,"P",{});var Se=y(N);R=g(Se,"But by using inheritance you do more than just to avoid to type the shared functionality between your components."),Se.forEach(k),S=w(n),G=f(n,"P",{});var Ge=y(G);M=g(Ge,"The benefit of inheritance is when we have shared functionality in many components!"),Ge.forEach(k),W=w(n),Y=f(n,"H2",{});var Me=y(Y);z=g(Me,"How"),Me.forEach(k),D=w(n),q=f(n,"P",{});var We=y(q);F=g(We,"Using component inheritance is simple, you need:"),We.forEach(k),J=w(n),K=f(n,"UL",{});var Ye=y(K);Q=f(Ye,"LI",{});var ze=y(Q);V=g(ze,"A Base component"),ze.forEach(k),X=w(Ye),Z=f(Ye,"LI",{});var De=y(Z);_=g(De,"The Component/s to extend the Base component"),De.forEach(k),Ye.forEach(k),nn=w(n),en=f(n,"H2",{});var qe=y(en);an=g(qe,"A simple example"),qe.forEach(k),tn=w(n),sn=f(n,"P",{});var Fe=y(sn);on=g(Fe,"Here we will use only one component to extend the Base component but the same process applies to no matter how many components we are going to use."),Fe.forEach(k),pn=w(n),cn=f(n,"H3",{});var Je=y(cn);rn=g(Je,"Base component"),Je.forEach(k),hn=w(n),un=f(n,"PRE",{class:!0}),y(un).forEach(k),ln=w(n),mn=f(n,"H3",{});var Ke=y(mn);dn=g(Ke,"ThemedInput component"),Ke.forEach(k),fn=w(n),yn=f(n,"P",{});var Qe=y(yn);gn=g(Qe,"By extending the Base component the ThemedInput has the theme input!"),Qe.forEach(k),kn=w(n),wn=f(n,"P",{});var Ve=y(wn);vn=g(Ve,"Anything added / updated in the Base component will be reflected here too!"),Ve.forEach(k),En=w(n),bn=f(n,"PRE",{class:!0}),y(bn).forEach(k),Tn=w(n),In=f(n,"H3",{});var Xe=y(In);Pn=g(Xe,"Changing/Updating shared functionality"),Xe.forEach(k),xn=w(n),Cn=f(n,"P",{});var Ze=y(Cn);Bn=g(Ze,"Having a base component with the shared functionality you can now "),Hn=f(Ze,"STRONG",{});var _e=y(Hn);An=g(_e,"change/update the shared functionality in one place"),_e.forEach(k),$n=g(Ze," instead of doing it in every component that exists or will be created in the future!"),Ze.forEach(k),On=w(n),Ln=f(n,"P",{});var na=y(Ln);jn=g(na,"A good scenario would be when you decide to use a service that is common to all the components to share state."),na.forEach(k),Un=w(n),Nn=f(n,"P",{});var ea=y(Nn);Rn=g(ea,"Imagine that one day you need to switch to NgRx:"),ea.forEach(k),Sn=w(n),Gn=f(n,"UL",{});var aa=y(Gn);Mn=f(aa,"LI",{});var ta=y(Mn);Wn=f(ta,"STRONG",{});var sa=y(Wn);Yn=g(sa,"Case 1 - You are using inheritance"),sa.forEach(k),zn=g(ta,": all you need to do is to update the base component to start using it."),ta.forEach(k),Dn=w(aa),qn=f(aa,"LI",{});var oa=y(qn);Fn=f(oa,"STRONG",{});var pa=y(Fn);Jn=g(pa,"Case 2 - You are NOT using inheritance"),pa.forEach(k),Kn=g(oa,": oh poor soul… you will need to go to all of the components and you will need to update the code for each one of them!"),oa.forEach(k),aa.forEach(k),Qn=w(n),Vn=f(n,"P",{});var ca=y(Vn);Xn=g(ca,"I believe the first Case is faster, simpler and less error prone ;)"),ca.forEach(k),Zn=w(n),_n=f(n,"P",{});var ia=y(_n);ne=f(ia,"STRONG",{});var ra=y(ne);ee=g(ra,"Adding new shared functionality becomes simple!"),ra.forEach(k),ia.forEach(k),ae=w(n),te=f(n,"H3",{});var ha=y(te);se=g(ha,"Testing shared code"),ha.forEach(k),oe=w(n),pe=f(n,"P",{});var ua=y(pe);ce=g(ua,"Testing the shared functionality is simpler, all we need to do is to test the base class."),ua.forEach(k),ie=w(n),re=f(n,"P",{});var la=y(re);he=g(la,"This way we avoid having to write tests that are actually testing the same shared code across components."),la.forEach(k),ue=w(n),le=f(n,"H2",{});var ma=y(le);me=g(ma,"Summary"),ma.forEach(k),de=w(n),fe=f(n,"P",{});var da=y(fe);ye=g(da,"Using the right tool for the job is important, here we explored using component inheritance to:"),da.forEach(k),ge=w(n),ke=f(n,"UL",{});var fa=y(ke);we=f(fa,"LI",{});var ya=y(we);ve=g(ya,"simplify the usage of shared component code"),ya.forEach(k),Ee=w(fa),be=f(fa,"LI",{});var ga=y(be);Te=g(ga,"allow for easier future change / update"),ga.forEach(k),Ie=w(fa),Pe=f(fa,"LI",{});var ka=y(Pe);xe=g(ka,"optimizing the testing of our shared code"),ka.forEach(k),fa.forEach(k),Ce=w(n),Be=f(n,"P",{});var wa=y(Be);He=f(wa,"STRONG",{});var va=y(He);Ae=g(va,"Inheritance is powerful yet keep in mind that to use it only when it makes sense."),va.forEach(k),wa.forEach(k),$e=w(n),Oe=f(n,"P",{});var Ea=y(Oe);Le=g(Ea,"Most of the times composition does the trick!"),Ea.forEach(k),je=w(n),Ue=f(n,"P",{});var ba=y(Ue);Ne=g(ba,"Happy coding!!!"),ba.forEach(k),this.h()},h(){v(un,"class","language-typescript"),v(bn,"class","language-typescript")},m(n,l){E(n,e,l),b(e,a),E(n,t,l),E(n,s,l),b(s,o),E(n,p,l),E(n,c,l),b(c,i),b(c,r),b(r,h),E(n,u,l),E(n,I,l),b(I,P),E(n,x,l),E(n,C,l),b(C,B),E(n,H,l),E(n,A,l),b(A,$),E(n,O,l),E(n,L,l),b(L,j),E(n,U,l),E(n,N,l),b(N,R),E(n,S,l),E(n,G,l),b(G,M),E(n,W,l),E(n,Y,l),b(Y,z),E(n,D,l),E(n,q,l),b(q,F),E(n,J,l),E(n,K,l),b(K,Q),b(Q,V),b(K,X),b(K,Z),b(Z,_),E(n,nn,l),E(n,en,l),b(en,an),E(n,tn,l),E(n,sn,l),b(sn,on),E(n,pn,l),E(n,cn,l),b(cn,rn),E(n,hn,l),E(n,un,l),un.innerHTML='<code class="language-typescript"><span class="token comment">// base.component.ts</span>\n<span class="token comment">//....</span>\n<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>\nselector<span class="token operator">:</span> <span class="token string">\'my-base\'</span><span class="token punctuation">,</span>\ntemplate<span class="token operator">:</span> <span class="token string">\'\'</span> <span class="token comment">// notice that the template is empty!</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">BaseComponent</span> <span class="token keyword">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">&#123;</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Input</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> theme<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>\n\n    <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',E(n,ln,l),E(n,mn,l),b(mn,dn),E(n,fn,l),E(n,yn,l),b(yn,gn),E(n,kn,l),E(n,wn,l),b(wn,vn),E(n,En,l),E(n,bn,l),bn.innerHTML='<code class="language-typescript"><span class="token comment">// themed-input.component.ts</span>\n<span class="token comment">//....</span>\n<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>\nselector<span class="token operator">:</span> <span class="token string">\'my-themed-input\'</span><span class="token punctuation">,</span>\ntemplateUrl<span class="token operator">:</span> <span class="token string">\'./themed-input-component.html\'</span><span class="token punctuation">.</span>\nstyleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./themed-input-component.scss\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ThemedInputComponent</span> <span class="token keyword">extends</span> <span class="token class-name">BaseComponent</span> <span class="token keyword">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">&#123;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n\n    <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',E(n,Tn,l),E(n,In,l),b(In,Pn),E(n,xn,l),E(n,Cn,l),b(Cn,Bn),b(Cn,Hn),b(Hn,An),b(Cn,$n),E(n,On,l),E(n,Ln,l),b(Ln,jn),E(n,Un,l),E(n,Nn,l),b(Nn,Rn),E(n,Sn,l),E(n,Gn,l),b(Gn,Mn),b(Mn,Wn),b(Wn,Yn),b(Mn,zn),b(Gn,Dn),b(Gn,qn),b(qn,Fn),b(Fn,Jn),b(qn,Kn),E(n,Qn,l),E(n,Vn,l),b(Vn,Xn),E(n,Zn,l),E(n,_n,l),b(_n,ne),b(ne,ee),E(n,ae,l),E(n,te,l),b(te,se),E(n,oe,l),E(n,pe,l),b(pe,ce),E(n,ie,l),E(n,re,l),b(re,he),E(n,ue,l),E(n,le,l),b(le,me),E(n,de,l),E(n,fe,l),b(fe,ye),E(n,ge,l),E(n,ke,l),b(ke,we),b(we,ve),b(ke,Ee),b(ke,be),b(be,Te),b(ke,Ie),b(ke,Pe),b(Pe,xe),E(n,Ce,l),E(n,Be,l),b(Be,He),b(He,Ae),E(n,$e,l),E(n,Oe,l),b(Oe,Le),E(n,je,l),E(n,Ue,l),b(Ue,Ne)},p:T,d(n){n&&k(e),n&&k(t),n&&k(s),n&&k(p),n&&k(c),n&&k(u),n&&k(I),n&&k(x),n&&k(C),n&&k(H),n&&k(A),n&&k(O),n&&k(L),n&&k(U),n&&k(N),n&&k(S),n&&k(G),n&&k(W),n&&k(Y),n&&k(D),n&&k(q),n&&k(J),n&&k(K),n&&k(nn),n&&k(en),n&&k(tn),n&&k(sn),n&&k(pn),n&&k(cn),n&&k(hn),n&&k(un),n&&k(ln),n&&k(mn),n&&k(fn),n&&k(yn),n&&k(kn),n&&k(wn),n&&k(En),n&&k(bn),n&&k(Tn),n&&k(In),n&&k(xn),n&&k(Cn),n&&k(On),n&&k(Ln),n&&k(Un),n&&k(Nn),n&&k(Sn),n&&k(Gn),n&&k(Qn),n&&k(Vn),n&&k(Zn),n&&k(_n),n&&k(ae),n&&k(te),n&&k(oe),n&&k(pe),n&&k(ie),n&&k(re),n&&k(ue),n&&k(le),n&&k(de),n&&k(fe),n&&k(ge),n&&k(ke),n&&k(Ce),n&&k(Be),n&&k($e),n&&k(Oe),n&&k(je),n&&k(Ue)}}}function x(n){let e,a;const l=[C];let m={$$slots:{default:[P]},$$scope:{ctx:n}};for(let s=0;s<l.length;s+=1)m=t(m,l[s]);return e=new I({props:m}),{c(){s(e.$$.fragment)},l(n){o(e.$$.fragment,n)},m(n,t){p(e,n,t),a=!0},p(n,[a]){const t=0&a?c(l,[u(C)]):{};1&a&&(t.$$scope={dirty:a,ctx:n}),e.$set(t)},i(n){a||(i(e.$$.fragment,n),a=!0)},o(n){r(e.$$.fragment,n),a=!1},d(n){h(e,n)}}}const C={author:"achimoraites",date:"Fri May 08 2020 00:00:00 GMT+0300",excerpt:"Component inheritance can be useful when you have duplicated/shared code between your components.",tags:["typescript","angular","oop","javascript"],slug:"angular-component-inheritance",subtitle:"Improve the scalabillity of your Angular project by using inheritance!",title:"Angular Component inheritance",url:"https://achimoraites.github.io/blog/angular-component-inheritance"},B=!0;export default class extends n{constructor(n){super(),e(this,n,null,x,a,{})}}export{C as metadata,B as prerender};
